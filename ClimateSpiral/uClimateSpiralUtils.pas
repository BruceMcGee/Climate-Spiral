unit uClimateSpiralUtils;

interface

uses
  System.UITypes;

function GetViridisColor(APercent: Single): TAlphaColor;
function Map(AValue, AInputMin, AInputMax, AOutputMin, AOutputMax: Double): Double; forward;

const
  FEdHawkinsGrey = $FF424242;
  FEdHawkinsWhite = $FFD6D6D6;

  VIRIDIS_HEX_DATA: array of TAlphaColor = [
    $FF440154, $FF440256, $FF450457, $FF450559, $FF46075A, $FF46085C, $FF460A5D,
    $FF460B5E, $FF470D60, $FF470E61, $FF471063, $FF471164, $FF471365, $FF481467,
    $FF481668, $FF481769, $FF48186A, $FF481A6C, $FF481B6D, $FF481C6E, $FF481D6F,
    $FF481F70, $FF482071, $FF482173, $FF482374, $FF482475, $FF482576, $FF482677,
    $FF482878, $FF482979, $FF472A7A, $FF472C7A, $FF472D7B, $FF472E7C, $FF472F7D,
    $FF46307E, $FF46327E, $FF46337F, $FF463480, $FF453581, $FF453781, $FF453882,
    $FF443983, $FF443A83, $FF443B84, $FF433D84, $FF433E85, $FF423F85, $FF424086,
    $FF424186, $FF414287, $FF414487, $FF404588, $FF404688, $FF3F4788, $FF3F4889,
    $FF3E4989, $FF3E4A89, $FF3E4C8A, $FF3D4D8A, $FF3D4E8A, $FF3C4F8A, $FF3C508B,
    $FF3B518B, $FF3B528B, $FF3A538B, $FF3A548C, $FF39558C, $FF39568C, $FF38588C,
    $FF38598C, $FF375A8C, $FF375B8D, $FF365C8D, $FF365D8D, $FF355E8D, $FF355F8D,
    $FF34608D, $FF34618D, $FF33628D, $FF33638D, $FF32648E, $FF32658E, $FF31668E,
    $FF31678E, $FF31688E, $FF30698E, $FF306A8E, $FF2F6B8E, $FF2F6C8E, $FF2E6D8E,
    $FF2E6E8E, $FF2E6F8E, $FF2D708E, $FF2D718E, $FF2C718E, $FF2C728E, $FF2C738E,
    $FF2B748E, $FF2B758E, $FF2A768E, $FF2A778E, $FF2A788E, $FF29798E, $FF297A8E,
    $FF297B8E, $FF287C8E, $FF287D8E, $FF277E8E, $FF277F8E, $FF27808E, $FF26818E,
    $FF26828E, $FF26828E, $FF25838E, $FF25848E, $FF25858E, $FF24868E, $FF24878E,
    $FF23888E, $FF23898E, $FF238A8D, $FF228B8D, $FF228C8D, $FF228D8D, $FF218E8D,
    $FF218F8D, $FF21908D, $FF21918C, $FF20928C, $FF20928C, $FF20938C, $FF1F948C,
    $FF1F958B, $FF1F968B, $FF1F978B, $FF1F988B, $FF1F998A, $FF1F9A8A, $FF1E9B8A,
    $FF1E9C89, $FF1E9D89, $FF1F9E89, $FF1F9F88, $FF1FA088, $FF1FA188, $FF1FA187,
    $FF1FA287, $FF20A386, $FF20A486, $FF21A585, $FF21A685, $FF22A785, $FF22A884,
    $FF23A983, $FF24AA83, $FF25AB82, $FF25AC82, $FF26AD81, $FF27AD81, $FF28AE80,
    $FF29AF7F, $FF2AB07F, $FF2CB17E, $FF2DB27D, $FF2EB37C, $FF2FB47C, $FF31B57B,
    $FF32B67A, $FF34B679, $FF35B779, $FF37B878, $FF38B977, $FF3ABA76, $FF3BBB75,
    $FF3DBC74, $FF3FBC73, $FF40BD72, $FF42BE71, $FF44BF70, $FF46C06F, $FF48C16E,
    $FF4AC16D, $FF4CC26C, $FF4EC36B, $FF50C46A, $FF52C569, $FF54C568, $FF56C667,
    $FF58C765, $FF5AC864, $FF5CC863, $FF5EC962, $FF60CA60, $FF63CB5F, $FF65CB5E,
    $FF67CC5C, $FF69CD5B, $FF6CCD5A, $FF6ECE58, $FF70CF57, $FF73D056, $FF75D054,
    $FF77D153, $FF7AD151, $FF7CD250, $FF7FD34E, $FF81D34D, $FF84D44B, $FF86D549,
    $FF89D548, $FF8BD646, $FF8ED645, $FF90D743, $FF93D741, $FF95D840, $FF98D83E,
    $FF9BD93C, $FF9DD93B, $FFA0DA39, $FFA2DA37, $FFA5DB36, $FFA8DB34, $FFAADC32,
    $FFADDC30, $FFB0DD2F, $FFB2DD2D, $FFB5DE2B, $FFB8DE29, $FFBADE28, $FFBDDF26,
    $FFC0DF25, $FFC2DF23, $FFC5E021, $FFC8E020, $FFCAE11F, $FFCDE11D, $FFD0E11C,
    $FFD2E21B, $FFD5E21A, $FFD8E219, $FFDAE319, $FFDDE318, $FFDFE318, $FFE2E418,
    $FFE5E419, $FFE7E419, $FFEAE51A, $FFECE51B, $FFEFE51C, $FFF1E51D, $FFF4E61E,
    $FFF6E620, $FFF8E621, $FFFBE723, $FFFDE725
    ];

implementation


// ----------------------------------------------------------------------------
function GetViridisColor(APercent: Single): TAlphaColor;
var
  LIndex: Integer;
begin
  LIndex := Round(Map(APercent, 0, 100, 0, Length(VIRIDIS_HEX_DATA) - 1));
  Result := VIRIDIS_HEX_DATA[LIndex];
end;

// ----------------------------------------------------------------------------
// Delphi implementation of Processing's Map() function
// https://processing.org/reference/map_.html
function Map(AValue, AInputMin, AInputMax, AOutputMin, AOutputMax: Double): Double;
begin
  Result := AOutputMin + (AOutputMax - AOutputMin) * ((AValue - AInputMin) / (AInputMax - AInputMin));
end;

end.
